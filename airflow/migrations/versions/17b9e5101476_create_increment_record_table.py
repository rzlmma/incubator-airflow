#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""create increment_record table

Revision ID: 17b9e5101476
Revises: d2ae31099d61
Create Date: 2017-12-21 15:36:14.334672

"""

# revision identifiers, used by Alembic.
revision = '17b9e5101476'
down_revision = 'd2ae31099d61'
branch_labels = None
depends_on = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('increment_record',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('table_name', sa.String(length=250), nullable=True),
    sa.Column('record_date', sa.Date(), nullable=True),
    sa.Column('numbers', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('dr_run_id', 'dag_run', ['dag_id', 'run_id'], unique=True)
    op.drop_index('dag_id', table_name='dag_run')
    op.drop_index('dag_id_2', table_name='dag_run')
    op.drop_index('dag_id_state', table_name='dag_run')
    op.alter_column(u'dag_stats', 'count',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=True)
    op.alter_column(u'dag_stats', 'dirty',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True)
    op.drop_index('idx_job_state_heartbeat', table_name='job')
    op.drop_column(u'task_fail', 'id')
    op.drop_index('ti_job_id', table_name='task_instance')
    op.drop_column(u'users', 'password')
    op.alter_column(u'xcom', 'execution_date',
               existing_type=mysql.DATETIME(fsp=6),
               nullable=False)
    op.alter_column(u'xcom', 'timestamp',
               existing_type=mysql.DATETIME(fsp=6),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(u'xcom', 'timestamp',
               existing_type=mysql.DATETIME(fsp=6),
               nullable=True)
    op.alter_column(u'xcom', 'execution_date',
               existing_type=mysql.DATETIME(fsp=6),
               nullable=True)
    op.add_column(u'users', sa.Column('password', mysql.VARCHAR(length=255), nullable=True))
    op.create_index('ti_job_id', 'task_instance', ['job_id'], unique=False)
    op.add_column(u'task_fail', sa.Column('id', mysql.INTEGER(display_width=11), nullable=False))
    op.create_index('idx_job_state_heartbeat', 'job', ['state', 'latest_heartbeat'], unique=False)
    op.alter_column(u'dag_stats', 'dirty',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False)
    op.alter_column(u'dag_stats', 'count',
               existing_type=mysql.INTEGER(display_width=11),
               nullable=False)
    op.create_index('dag_id_state', 'dag_run', ['dag_id', 'state'], unique=False)
    op.create_index('dag_id_2', 'dag_run', ['dag_id', 'run_id'], unique=True)
    op.create_index('dag_id', 'dag_run', ['dag_id', 'execution_date'], unique=True)
    op.drop_index('dr_run_id', table_name='dag_run')
    op.drop_table('increment_record')
    # ### end Alembic commands ###
